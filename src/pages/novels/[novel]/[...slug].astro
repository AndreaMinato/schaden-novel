---
import { type CollectionEntry, getCollection } from "astro:content";
import Chapter from "../../../layouts/Chapter.astro";
import { render } from "astro:content";
import { defaultSort } from "src/consts";

export async function getStaticPaths() {
  const posts = await getCollection("chapters");
  return posts.map((post) => {
    const [novel, slug] = post.id.split("/");
    return {
      params: { novel, slug },
      props: post,
    };
  });
}
type Props = CollectionEntry<"chapters">;

const post = Astro.props;
const [novel, slug] = post.id.split("/");
const { Content } = await render(post);

const chapters = (
  await getCollection("chapters", ({ data }) => {
    return data.tags.includes(novel);
  })
).sort(defaultSort);

const thisChapter = chapters.findIndex((chapter) => chapter.id === post.id);
const prev = chapters[thisChapter + 1];
const next = chapters[thisChapter - 1];
---

<Chapter data={post.data} next={next} prev={prev} novel={novel} slug={slug}>
  <Content />
</Chapter>
